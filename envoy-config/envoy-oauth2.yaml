static_resources:
  secrets:
  - name: token
    generic_secret:
      secret:
        inline_string: <Your token secret here>
  - name: hmac
    generic_secret:
      secret:
        inline_string: <Your token secret here>
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: upstream-service
          http_filters:
          - name: envoy.filters.http.oauth2
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3alpha.OAuth2
              config:
                token_endpoint:
                  cluster: oauth
                  uri: "https://<server>/oauth2/default/v1/token"
                  timeout: 5s
                authorization_endpoint: "https://<server>/oauth2/default/v1/authorize"
                redirect_uri: "http://localhost:8000/callback"
                redirect_path_matcher:
                  path:
                    exact: /callback
                signout_path:
                  path:
                    exact: /signout
                forward_bearer_token: true
                credentials:
                  client_id: <client id>
                  token_secret:
                    name: token
                  hmac_secret:
                    name: hmac
                auth_scopes:
                - openid
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                provider1:
                  remote_jwks:
                    http_uri:
                      uri: "https://<server>/oauth2/default/v1/keys"
                      cluster: oauth
                      timeout: 5s
                    cache_duration: 600s
              rules:
                 - match:
                     prefix: /
                   requires:
                     provider_name: provider1
          - name: envoy.filters.http.router
            typed_config: {}
  clusters:
  - name: upstream-service
    connect_timeout: 0.250s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8001
  - name: oauth
    connect_timeout: 0.250s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: oauth
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: <server>
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: <server>
